package com.smartsparrow.rtm.message.handler;

import static com.smartsparrow.util.Warrants.affirmArgument;

import org.eclipse.jetty.websocket.api.Session;

import com.google.inject.Inject;
import com.smartsparrow.rtm.lang.RTMValidationException;
import com.smartsparrow.rtm.message.MessageHandler;
import com.smartsparrow.rtm.message.recv.$messageName;
import com.smartsparrow.rtm.message.send.BasicResponseMessage;
import com.smartsparrow.rtm.util.Responses;

public class <%= messageName %>Handler implements MessageHandler<$messageName> {

    public static final String <%= messageType.replaceAll("\\.", "_").toUpperCase() %> = "$messageType";
    public static final String <%= messageType.replaceAll('\\.', '_').toUpperCase() %>_OK = "<%= messageType %>.ok";
    public static final String <%= messageType.replaceAll('\\.', '_').toUpperCase() %>_ERROR = "<%= messageType %>.error";

    @Inject
    public <%= messageName %>Handler() {
    }

    @Override
    public void validate($messageName message) throws RTMValidationException {
        affirmArgument(message.get<%= parameters[0].capitalize() %>() != null, "<%= parameters[0] %> is required");
    }

    @Override
    public void handle(Session session, $messageName message) {
        BasicResponseMessage basicResponseMessage = new BasicResponseMessage(<%= messageType.replaceAll('\\.', '_').toUpperCase() %>_OK, message.getId());
        Responses.writeReactive(session, basicResponseMessage);
    }
}